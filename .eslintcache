[{"C:\\Users\\Merle\\Desktop\\weather-app\\src\\index.js":"1","C:\\Users\\Merle\\Desktop\\weather-app\\src\\App.js":"2","C:\\Users\\Merle\\Desktop\\weather-app\\src\\reportWebVitals.js":"3","C:\\Users\\Merle\\Desktop\\weather-app\\src\\Weather.js":"4","C:\\Users\\Merle\\Desktop\\weather-app\\src\\FormattedData.js":"5"},{"size":682,"mtime":1612208852143,"results":"6","hashOfConfig":"7"},{"size":227,"mtime":1611269472475,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":3036,"mtime":1612241117656,"results":"10","hashOfConfig":"7"},{"size":854,"mtime":1612243878487,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1cvv0u5",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":2,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Merle\\Desktop\\weather-app\\src\\index.js",[],["25","26"],"C:\\Users\\Merle\\Desktop\\weather-app\\src\\App.js",[],["27","28"],"C:\\Users\\Merle\\Desktop\\weather-app\\src\\reportWebVitals.js",[],"C:\\Users\\Merle\\Desktop\\weather-app\\src\\Weather.js",["29","30","31"],"import React, { useState } from \"react\";\nimport \"./Weather.css\";\nimport axios from \"axios\";\nimport FormattedData from \"./FormattedData\";\nexport default function Weather() {\n  const [weatherData, setWeatherData] = useState({ ready: false });\n  function handleResponse(response) {\n    console.log(response.data);\n    setWeatherData({\n      ready: true,\n      temperature: response.data.main.temp,\n      humidity: response.data.main.humidity,\n      date: \"wednesday 07:00\",\n      description: response.data.weather[0].description,\n      imgUrl: \"https://ssl.gstatic.com/onebox/weather/64/cloudy.png\",\n      wind: response.data.wind.speed,\n      city: response.data.name,\n    });\n  }\n  if (weatherData.ready) {\n    return (\n      <div className=\"App\">\n        <div className=\"Weather\">\n          <form className=\"mt-2 mb-3\">\n            <div className=\"row\">\n              <div className=\"col-9\">\n                <input\n                  type=\"search\"\n                  placeholder=\"Type a city name\"\n                  className=\"form-control\"\n                  autofocus=\"on\"\n                  autocomplete=\"off\"\n                />\n              </div>\n              <div className=\"col-3\">\n                <input\n                  type=\"submit\"\n                  value=\"Search\"\n                  className=\"btn btn-outline-secondary w-100\"\n                />\n              </div>\n            </div>\n          </form>\n          <div className=\"weather-overview\">\n            <h1>{weatherData.city}</h1>\n            <ul>\n              <li>\n                <i>\n                  <FormattedDate date={weatherData.date} />\n                </i>\n              </li>\n              <li>{weatherData.description}</li>\n            </ul>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <div className=\"clearfix current-temperature\">\n                <img\n                  src={weatherData.imgUrl}\n                  alt={weatherData.description}\n                  className=\"float-left\"\n                />\n                <div className=\"float-left\">\n                  <strong>{weatherData.temperature}</strong>\n                  <span className=\"units\">\n                    <a href=\"/\">°C</a> | <a href=\"/\">°F</a>\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-5 humidity-and-wind\">\n              <ul>\n                <li>\n                  Humidity: <span>{weatherData.humidity}</span>%\n                </li>\n                <li className=\"wind-li\">\n                  Wind: <span>{weatherData.wind}</span> km/h\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"row\"></div>\n        </div>\n      </div>\n    );\n  } else {\n    const apiKey = \"0e7fda8f04980882d2b3cbcbbbb1c0e4\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${props.defaultCity}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return \"Loading...\";\n  }\n}","C:\\Users\\Merle\\Desktop\\weather-app\\src\\FormattedData.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"32","replacedBy":"36"},{"ruleId":"34","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":4,"column":8,"nodeType":"40","messageId":"41","endLine":4,"endColumn":21},{"ruleId":"42","severity":2,"message":"43","line":49,"column":20,"nodeType":"44","endLine":49,"endColumn":33},{"ruleId":"45","severity":2,"message":"46","line":88,"column":71,"nodeType":"40","messageId":"47","endLine":88,"endColumn":76},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],["48"],["49"],"no-unused-vars","'FormattedData' is defined but never used.","Identifier","unusedVar","react/jsx-no-undef","'FormattedDate' is not defined.","JSXIdentifier","no-undef","'props' is not defined.","undef","no-global-assign","no-unsafe-negation"]